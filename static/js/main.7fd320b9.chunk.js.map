{"version":3,"sources":["SearchForm.js","index.js"],"names":["SearchForm","props","onSubmit","event","preventDefault","onFormSubmit","className","type","placeholder","onChange","onSearchValueChange","target","value","disabled","isSearching","onClick","onSingleSearchClick","App","state","searchTerm","jokes","isFetchingJokes","onSearchChange","bind","searchJokes","limit","this","setState","fetch","method","headers","Accept","then","response","json","results","map","item","joke","id","renderJokes","React","Component","rootElement","document","getElementById","createRoot","render"],"mappings":"mOA4BeA,EA1BI,SAACC,GAKlB,OACE,uBAAMC,SALS,SAACC,GAChBA,EAAMC,iBACNH,EAAMI,cACR,EAE4BC,UAAU,cAAa,UAC/C,uBACEC,KAAK,OACLC,YAAY,uBACZC,SAAU,SAACN,GAAK,OAAKF,EAAMS,oBAAoBP,EAAMQ,OAAOC,MAAM,IAEpE,gCACE,wBAAQC,SAAUZ,EAAMa,YAAY,SAAC,WAErC,wBACEC,QAASd,EAAMe,oBACfH,SAAUZ,EAAMa,YAAY,SAC7B,2BAMT,ECjBMG,EAAG,kDACP,aAAe,IAAD,EAUmC,OAVnC,qBACZ,gBAEKC,MAAQ,CACXC,WAAY,GACZC,MAAO,GACPC,iBAAiB,GAGnB,EAAKC,eAAiB,EAAKA,eAAeC,KAAK,gBAC/C,EAAKC,YAAc,EAAKA,YAAYD,KAAK,gBAAM,CACjD,CAqDC,OArDA,wCAED,WAAyB,IAAD,OAAZE,EAAK,uDAAG,GAClBC,KAAKC,SAAS,CAAEN,iBAAiB,IAEjCO,MAAM,0CAAD,OACuCF,KAAKR,MAAMC,WAAU,kBAAUM,GACzE,CACEI,OAAQ,MACRC,QAAS,CACPC,OAAQ,sBAIXC,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACE,GACL,IAAMd,EAAQc,EAAKC,QACnB,EAAKR,SAAS,CACZP,QACAC,iBAAiB,GAErB,GACJ,GAAC,4BAED,SAAeT,GACbc,KAAKC,SAAS,CAAER,WAAYP,GAC9B,GAAC,yBAED,WACE,OACE,6BACGc,KAAKR,MAAME,MAAMgB,KAAI,SAACC,GAAI,OACzB,6BAAmBA,EAAKC,MAAfD,EAAKE,GAAoB,KAI1C,GAAC,oBAED,WAAU,IAAD,OACP,OACE,sBAAKjC,UAAU,MAAK,UAClB,cAAC,EAAU,CACTD,aAAcqB,KAAKF,YACnBd,oBAAqBgB,KAAKJ,eAC1BR,YAAaY,KAAKR,MAAMG,gBACxBL,oBAAqB,kBAAM,EAAKQ,YAAY,EAAE,IAG/CE,KAAKR,MAAMG,gBACR,yBACAK,KAAKc,gBAGf,KAAC,EAjEM,CAASC,IAAMC,WAmElBC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,EAAG,M","file":"static/js/main.7fd320b9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SearchForm = (props) => {\n  const onSubmit = (event) => {\n    event.preventDefault();\n    props.onFormSubmit();\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"search-form\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter search term...\"\n        onChange={(event) => props.onSearchValueChange(event.target.value)}\n      />\n      <div>\n        <button disabled={props.isSearching}>Search</button>\n\n        <button\n          onClick={props.onSingleSearchClick}\n          disabled={props.isSearching}\n        >\n          I'm Feeling Funny\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React, { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\n//import App from \"./App\";\n\nimport \"./styles.css\";\nimport \"./SearchForm.css\";\nimport SearchForm from \"./SearchForm\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      searchTerm: \"\",\n      jokes: [],\n      isFetchingJokes: false\n    };\n\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.searchJokes = this.searchJokes.bind(this);\n  }\n\n  searchJokes(limit = 20) {\n    this.setState({ isFetchingJokes: true });\n\n    fetch(\n      `https://icanhazdadjoke.com/search?term=${this.state.searchTerm}&limit=${limit}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\"\n        }\n      }\n    )\n      .then((response) => response.json())\n      .then((json) => {\n        const jokes = json.results;\n        this.setState({\n          jokes,\n          isFetchingJokes: false\n        });\n      });\n  }\n\n  onSearchChange(value) {\n    this.setState({ searchTerm: value });\n  }\n\n  renderJokes() {\n    return (\n      <ul>\n        {this.state.jokes.map((item) => (\n          <li key={item.id}>{item.joke}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchForm\n          onFormSubmit={this.searchJokes}\n          onSearchValueChange={this.onSearchChange}\n          isSearching={this.state.isFetchingJokes}\n          onSingleSearchClick={() => this.searchJokes(1)}\n        />\n\n        {this.state.isFetchingJokes\n          ? \"searching for jokes...\"\n          : this.renderJokes()}\n      </div>\n    );\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}